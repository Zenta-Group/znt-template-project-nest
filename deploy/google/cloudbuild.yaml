steps:
  - id: 'Build docker image'
    name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_DOCKER_REPOSITORY}/client-system-backend:$BUILD_ID',
        '.',
      ]

  - id: 'Push docker image'
    name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_DOCKER_REPOSITORY}/client-system-backend:$BUILD_ID',
      ]
  
  - id: 'Sonar'
    name: 'sonarsource/sonar-scanner-cli:5.0'
    entrypoint: 'sonar-scanner'
    args:
      - '-Dsonar.host.url=https://sonar.zentalabs.com'
      - '-Dsonar.login=${_SONAR_TOKEN}'
      - '-Dsonar.projectKey=${_SONAR_PROJECT_KEY}'
      - '-Dsonar.sources=src'
      - '-Dsonar.tests=src'
      - '-Dsonar.test.inclusions=**/*.spec.ts'
      - '-Dsonar.javascript.lcov.reportPaths=coverage/lcov.info'
      - '-Dsonar.typescript.lcov.reportPaths=coverage/lcov.info'
      - >-
        -Dsonar.exclusions=**/*.entity.ts,**/*.dto.ts,**/*.module.ts,**/*.interface.ts,**/main.ts,
        **/core/database/entities/**,**/shared/models/**,**/shared/interfaces/**,
        **/shared/enums/**,**/shared/constants/**,**/shared/decorators/**,
        **/shared/exceptions/**,**/shared/dtos/**,**/shared/pipes/**,
        **/shared/guards/**,**/shared/interceptors/**,**/shared/utils/**,
        **/auth/google-auth.service.ts,**/auth/auth.module.ts
      - >-
        -Dsonar.coverage.exclusions=**/*.dto.ts,**/*.module.ts,**/*.interface.ts,
        **/main.ts,**/core/database/entities/**,**/shared/models/**,
        **/shared/interfaces/**,**/shared/enums/**,**/shared/constants/**,
        **/shared/decorators/**,**/shared/exceptions/**,**/shared/dtos/**,
        **/shared/pipes/**,**/shared/guards/**,**/shared/interceptors/**,
        **/shared/utils/**,**/auth/google-auth.service.ts,**/auth/auth.module.ts


  - id: 'Deploy to Cloud Run'
    name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'client-system-backend-${_ENV}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_DOCKER_REPOSITORY}/client-system-backend:$BUILD_ID'
      - '--region'
      - '${_REGION}'
      - '--service-account'
      - '${_RUN_SERVICE_ACCOUNT_EMAIL}'
      - '--set-env-vars=ENV=${_ENV}'
      - '--set-env-vars=PROJECT_ID=$PROJECT_ID'
      - '--set-env-vars=LIST_CORS=${_LIST_CORS}'
      - '--set-env-vars=TOKEN_EXPIRATION=${_TOKEN_EXPIRATION}'
      - '--set-env-vars=SECRETKEY_AUTH=${_SECRETKEY_AUTH}'
      - '--set-env-vars=EXTERNAL_API__SECURITY_TYPE=${_EXTERNAL_API_SECURITY_TYPE}'
      - '--set-env-vars=EXTERNAL_API_TOKEN=${_EXTERNAL_API_TOKEN}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'

options:
  logging: CLOUD_LOGGING_ONLY